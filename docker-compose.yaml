version: '3.8'

services:
#  gafka:
#    build: .
#    container_name: gafka
#    depends_on:
#      - gafka-db
#      - kafka
#    restart: unless-stopped
#    networks:
#      - scraper-net

  gafka-db:
    image: postgres:latest
    container_name: gafka-db
    environment:
      POSTGRES_USER: gafka
      POSTGRES_PASSWORD: 192205a9-58a7-4b7c-bd79-eab828e39eea
      POSTGRES_DB: gafka
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gafka -d gafka"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - scraper-net
    restart: unless-stopped
    ports:
      - "5432:5432"


  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    networks:
      - scraper-net
    restart: unless-stopped


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - scraper-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "Orderbook:1:1,Trades:1:1"
    networks:
      - scraper-net

networks:
  scraper-net:
    driver: bridge

volumes:
  db_data:
