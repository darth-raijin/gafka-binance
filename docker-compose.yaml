version: '3.8'

services:
  gafka:
    build: .
    container_name: gafka
    depends_on:
      - gafka-db
      - kafka
    restart: unless-stopped
    networks:
      - scraper-net

  gafka-db:
    image: postgres:latest
    container_name: gafka-db
    environment:
      POSTGRES_USER: gafka
      POSTGRES_PASSWORD: 192205a9-58a7-4b7c-bd79-eab828e39eea
      POSTGRES_DB: gafka
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gafka -d gafka"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - scraper-net
    restart: unless-stopped
    ports:
      - "5432:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - scraper-net
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Orderbook:1:1,Trades:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - scraper-net
    restart: unless-stopped

networks:
  scraper-net:
    driver: bridge

volumes:
  db_data:
